#!../output/nlc --eval

$test1 := "";
%__NLC_VER
%__FILE
%__LINE
%__DATE
%__NAME (имя функции или класса)
%__FULL_NAME (имя функции или класса включая namespace)
%__COUNTER  развертывается до целочисленного литерала, начинающегося с 0. 
Значение увеличивается на 1 каждый раз, когда используется в файле исходного кода или во включенных заголовках файла исходного кода. 
\__COUNTER запоминает свое состояние при использовании предкомпилированных заголовков.
%__TIMESTAMP — определяется как строковый литерал, содержащий дату и время последнего изменения текущего исходного файла в сокращенной форме с постоянной длиной, которые возвращаются функцией asctime библиотеки CRT, например: Fri 19 Aug 13:32:58 2016. Этот макрос определяется всегда.

#Определить макросы для тестов
\\while(...) [\$*] --> \\\
\\else ,[_] --> \\\
\\try \() \\\
\\error(msg) :StrWide($msg, " at line: ", %__LINE, " in file: ", %__FILE) \\\ 

$result = "";

:class := :Class(arg1, arg2="default") {
    # Using $arg1, $arg2

    # Код выполняется однократно при создании типа класса :class

    $result += "Call CLASS constructor\n";
    field := arg1;
    counter := 0;

    __class(arg1=$arg1, arg2=$arg2, arg3="construcor default")={

        # Код выполняется многократно при создании каждого экземпляра класса :class

        $0->counter += 1;
        $result += "Call OBJECT $1 constructor\n"($0->counter);
    };

    method()={
        $result += "Call method\n";
    };

    _={
        # Код выполняется многократно при удалении каждого экземпляра класса :class
        $0->counter -= 1;
        $result += "Call OBJECT $1 destructor\n"($0->counter);
    };
};
